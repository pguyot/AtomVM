/*
 * This file is part of AtomVM.
 *
 * Copyright 2017-2021 Davide Bettio <davide@uninstall.it>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later
 */

%readonly-tables

%{
#include <string.h>
#include <stdbool.h>
typedef struct BifNameAndPtr BifNameAndPtr;
%}
struct BifNameAndPtr
{
  const char *name;
  BifImpl function;
  bool gc_bif : 1;
};
%%
erlang:self/0, bif_erlang_self_0, false
erlang:length/1, bif_erlang_length_1, true
erlang:byte_size/1, bif_erlang_byte_size_1, true
erlang:bit_size/1, bif_erlang_bit_size_1, true
erlang:get/1, bif_erlang_get_1, false
erlang:is_atom/1, bif_erlang_is_atom_1, false
erlang:is_binary/1, bif_erlang_is_binary_1, false
erlang:is_boolean/1, bif_erlang_is_boolean_1, false
erlang:is_float/1, bif_erlang_is_float_1, false
erlang:is_function/1, bif_erlang_is_function_1, false
erlang:is_integer/1, bif_erlang_is_integer_1, false
erlang:is_list/1, bif_erlang_is_list_1, false
erlang:is_number/1, bif_erlang_is_number_1, false
erlang:is_pid/1, bif_erlang_is_pid_1, false
erlang:is_reference/1, bif_erlang_is_reference_1, false
erlang:is_tuple/1, bif_erlang_is_tuple_1, false
erlang:is_map/1, bif_erlang_is_map_1, false
erlang:is_map_key/2, bif_erlang_is_map_key_2, false
erlang:not/1, bif_erlang_not_1, false
erlang:and/2, bif_erlang_and_2, false
erlang:or/2, bif_erlang_or_2, false
erlang:xor/2, bif_erlang_xor_2, false
erlang:==/2, bif_erlang_equal_to_2, false
erlang:/=/2, bif_erlang_not_equal_to_2, false
erlang:=:=/2, bif_erlang_exactly_equal_to_2, false
erlang:=/=/2, bif_erlang_exactly_not_equal_to_2, false
erlang:>/2, bif_erlang_greater_than_2, false
erlang:</2, bif_erlang_less_than_2, false
erlang:=</2, bif_erlang_less_than_or_equal_2, false
erlang:>=/2, bif_erlang_greater_than_or_equal_2, false
erlang:+/2, bif_erlang_add_2, true
erlang:-/2, bif_erlang_sub_2, true
erlang:*/2, bif_erlang_mul_2, true
erlang:div/2, bif_erlang_div_2, true
erlang:rem/2, bif_erlang_rem_2, true
erlang:-/1, bif_erlang_neg_1, true
erlang:abs/1, bif_erlang_abs_1, true
erlang:ceil/1, bif_erlang_ceil_1, true
erlang:floor/1, bif_erlang_floor_1, true
erlang:round/1, bif_erlang_round_1, true
erlang:trunc/1, bif_erlang_trunc_1, true
erlang:bor/2, bif_erlang_bor_2, true
erlang:band/2, bif_erlang_band_2, true
erlang:bxor/2, bif_erlang_bxor_2, true
erlang:bsl/2, bif_erlang_bsl_2, true
erlang:bsr/2, bif_erlang_bsr_2, true
erlang:bnot/1, bif_erlang_bnot_1, true
erlang:hd/1, bif_erlang_hd_1, false
erlang:tl/1, bif_erlang_tl_1, false
erlang:element/2, bif_erlang_element_2, false
erlang:tuple_size/1, bif_erlang_tuple_size_1, false
erlang:map_size/1, bif_erlang_map_size_1, true
erlang:map_get/2, bif_erlang_map_get_2, false
erlang:min/2, bif_erlang_min_2, false
erlang:max/2, bif_erlang_max_2, false